#!/usr/bin/env php
<?php

if (!is_callable('exec')) {
    echo "❌ El sistema no permite ejecución de comandos.\n";
    exit(1);
}

// 🔍 Comprobación de PATH
function yervix_path_check(): void {
    $realBinDir = realpath(__DIR__);
    $systemPath = getenv('PATH');
    if (!str_contains($systemPath, $realBinDir)) {
        echo "⚠️ El comando `yervix` podría no estar en tu PATH.\n";
        echo "ℹ️ Agrega esta ruta al PATH:\n   $realBinDir\n";
    }
}

yervix_path_check();

$command = $argv[1] ?? null;
$arg = $argv[2] ?? null;

switch ($command) {
    case 'new':
        if (!$arg) {
            echo "❌ Debes indicar el nombre del proyecto.\n";
            echo "ℹ️ Uso: yervix new nombre-del-proyecto\n";
            exit(1);
        }

        $project = $arg;
        if (is_dir($project)) {
            echo "⚠️ Ya existe una carpeta con ese nombre.\n";
            exit(1);
        }

        echo "\n🎨 Elige la plantilla visual para este proyecto:\n";
        echo "  [1] Tailwind\n";
        echo "  [2] Bootstrap\n";
        echo "  [3] Bulma\n";
        echo "  [4] Flowbite\n";
        $input = readline("👉 Escribe el número y presiona ENTER: ");

        $selectedTemplate = match (trim($input)) {
            '2' => 'bootstrap',
            '3' => 'bulma',
            '4' => 'flowbite',
            default => 'tailwind',
        };

        echo "\n🧩 Has seleccionado: $selectedTemplate\n";
        echo "🛠️ Creando proyecto Yervix: $project...\n";

        $folders = [
            "$project",
            "$project/core-engine",
            "$project/core-engine/builder",
            "$project/core-engine/modules",
            "$project/core-engine/templates",
            "$project/core-engine/templates/$selectedTemplate",
            "$project/core-engine/db",
            "$project/core-engine/deploy",
            "$project/controllers",
            "$project/models",
            "$project/views",
            "$project/public",
            "$project/public/assets",
        ];

        foreach ($folders as $folder) {
            mkdir($folder, 0755, true);
        }

        echo "✅ Carpetas creadas.\n";

        $config = <<<CONFIG
<?php
return [
  "template" => "$selectedTemplate",
  "database" => [
    "host" => "localhost",
    "name" => "yervix_db",
    "user" => "root",
    "pass" => ""
  ]
];
CONFIG;

        file_put_contents("$project/core-engine/config.php", $config);
        echo "🧠 Configuración generada.\n";

        $headline = "Bienvenido a Yervix con " . ucfirst($selectedTemplate);
        $styles = match ($selectedTemplate) {
            'bootstrap' => '<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">',
            'bulma' => '<link href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css" rel="stylesheet">',
            'flowbite' => '<script src="https://cdn.tailwindcss.com"></script><link href="https://cdn.jsdelivr.net/npm/flowbite@3.1.2/dist/flowbite.min.css" rel="stylesheet">',
            default => '<script src="https://cdn.tailwindcss.com"></script>',
        };

        $homeContent = <<<HTML
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Yervix | $selectedTemplate</title>
  $styles
</head>
<body class="bg-light py-5 text-center">
  <h1 style="color:#007bff;">$headline</h1>
  <script>
const evtSource = new EventSource("/watcher.php");
evtSource.onmessage = function(event) {
    if (event.data === "reload") {
        location.reload();
    }
};
</script>
</body>
</html>
HTML;

        file_put_contents("$project/core-engine/templates/$selectedTemplate/home.php", $homeContent);
        echo "🎨 Vista base generada.\n";

        $indexContent = <<<PHP
<?php
\$config = require __DIR__ . '/core-engine/config.php';
\$template = \$config['template'] ?? '$selectedTemplate';
\$viewPath = __DIR__ . "/core-engine/templates/\$template/home.php";

if (file_exists(\$viewPath)) {
  include \$viewPath;
} else {
  echo "<h1 style='color:red;'>Vista '\$template/home.php' no encontrada</h1>";
}
PHP;

        file_put_contents("$project/index.php", $indexContent);
        echo "📄 Archivo index.php listo.\n";

        echo "\n✅ Proyecto '$project' creado exitosamente.\n";
        echo "👉 cd $project\n";
        echo "🧭 yervix serve\n";
        echo "🌐 Se abrirá automáticamente: http://localhost:8000\n\n";
        break;

    case 'serve':
        echo "🚀 Iniciando servidor Yervix...\n";
        $config = require __DIR__ . '/core-engine/config.php';
        $template = $config['template'] ?? 'tailwind';

        echo "🎨 Plantilla activa: $template\n";
        echo "📦 Ejecutando: php -S localhost:8000 index.php\n";

        if (strncasecmp(PHP_OS, 'WIN', 3) === 0) {
            pclose(popen("start http://localhost:8000", "r"));
        } else {
            shell_exec("xdg-open http://localhost:8000");
        }

        passthru("php -S localhost:8000 index.php");
        break;

        case 'run':
        if ($arg === 'dev') {
            echo "🚀 Yervix en modo desarrollo (hot reload)...\n";

            $config = require __DIR__ . '/core-engine/config.php';
            $template = $config['template'] ?? 'tailwind';
            $homePath = __DIR__ . "/core-engine/templates/$template/home.php";

            // Crea watcher.php si no existe
            $watcherCode =<<<PHP
<?php
\$homeFile = "$homePath";
\$lastMod = filemtime(\$homeFile);

header('Content-Type: text/event-stream');
header('Cache-Control: no-cache');

while (true) {
    clearstatcache();
    \$currentMod = filemtime(\$homeFile);
    if (\$currentMod > \$lastMod) {
        echo "data: reload\\n\\n";
        ob_flush();
        flush();
        \$lastMod = \$currentMod;
    }
    sleep(1);
}
PHP;
            file_put_contents(__DIR__ . '/watcher.php', $watcherCode);

            // Abrir navegador automáticamente
            if (strncasecmp(PHP_OS, 'WIN', 3) === 0) {
                pclose(popen("start http://localhost:8000", "r"));
            } else {
                shell_exec("xdg-open http://localhost:8000");
            }

            // Levanta server y watcher en segundo plano
            shell_exec("php -S localhost:8000 index.php > nul 2>&1 &");
            shell_exec("php watcher.php > nul 2>&1 &");
            exit(0);
        }
        break;

    default:
        echo "🧭 Comandos disponibles:\n";
        echo "   new <nombre> → Crear nuevo proyecto\n";
        echo "   serve        → Levanta servidor en localhost:8000\n";
        break;
}